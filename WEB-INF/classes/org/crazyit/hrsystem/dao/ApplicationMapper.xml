<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.crazyit.hrsystem.dao.ApplicationMapper">

<!-- insert順序還未照DB Table排列 -->	
	<insert id="save" parameterType="application">
		insert application_inf values (null,
		#{reason}, false, #{attend.id}, #{type.id});
	</insert>
	<update id="update" parameterType="application">
		update application_inf set attend_id = #{attend.id},
		app_reason = #{reason}, app_result = #{result},
		type_id = #{type.id}
		where app_id = #{id}
	</update>
	<!-- 使用多表连接查询 -->
	<select id="get" resultMap="applicationMap">
		select app.*, type.*
		from application_inf app
		join attend_inf attend
		on app.attend_id = attend.attend_id
		join attend_type_inf type
		on app.type_id = type.type_id
		where app.app_id = #{id}
	</select>
	<!-- 使用多表连接查询 -->
	<select id="findByEmp" resultMap="applicationMap">
		select app.*, type.*
		from application_inf app
		join attend_inf attend
		on app.attend_id = attend.attend_id
		join attend_type_inf type
		on app.type_id = type.type_id
		where attend.emp_id = #{id}
	</select>
	<resultMap id="applicationMap" type="application">
		<!-- 指定app_id、app_reason、app_result映射到
			Application实体的属性 -->
		<id column="app_id" property="id"/>
		<result column="app_reason" property="reason"/>
		<result column="app_result" property="result"/>
		<!-- 映射关联实体 -->
		<association property="attend" javaType="attend"
			column="attend_id" 
			select="org.crazyit.hrsystem.dao.AttendMapper.get"
			fetchType="lazy"/>
		<association property="type" javaType="attendType"
			resultMap="org.crazyit.hrsystem.dao.AttendTypeMapper.typeMap"/>
	</resultMap>
	<!-- 开启默认的二级缓存 -->
	<cache/>
</mapper>